---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <h2 class="text-xl font-semibold mb-3">Penguin avec de multiples filtres</h2>

  <label for="species-client" class="block text-sm mb-1">Espèce</label>
  <div class="flex gap-4 mb-4">
    <select id="species-client" class="border rounded px-3 py-2 mb-4">
      <option value="">All species</option>
      <option value="Adelie">Adelie</option>
      <option value="Chinstrap">Chinstrap</option>
      <option value="Gentoo">Gentoo</option>
    </select>
    <select id="island" class="border rounded px-3 py-2 mb-4">
      <option value="">All islands</option>
      <option value="Dream">Dream</option>
      <option value="Torgersen">Torgersen</option>
      <option value="Biscoe">Biscoe</option>
    </select>
    <select id="sex" class="border rounded px-3 py-2 mb-4">
      <option value="">All sexes</option>
      <option value="Male">Male</option>
      <option value="Female">Female</option>
    </select>
  </div>
  <div id="plot-filter"></div>

  <script>
    // Importe la librairie Plot d'ObservableHQ
    import * as Plot from "@observablehq/plot";
    import penguins from "../assets/penguins.json";


    // Récupère l'élément select pour choisir l'espèce
    const selectSpecies = document.getElementById("species-client");
    const selectIsland = document.getElementById("island");
    const selectSex = document.getElementById("sex");
    const container = document.getElementById("plot-filter");

    // Fonction pour afficher le graphique
    function renderPlot() {
      // Récupère l'espèce sélectionnée
      const species = /** @type {HTMLSelectElement} */ (selectSpecies).value;
      const island = /** @type {HTMLSelectElement} */ (selectIsland).value;
      const sex = /** @type {HTMLSelectElement} */ (selectSex).value;
      // Vide le contenu précédent de la div
      container.innerHTML = "";
      

      // Dataset filtré (si espèce choisie)
      // const data = species
      //   ? penguins.filter((p) => p.species === species)
      //   : penguins;

      // Crée le graphique avec Plot
      const plot = Plot.plot({
        grid: true,
        marks: [
          // Ajoute les points du graphique, filtrés selon l'espèce choisie
          Plot.dot(penguins, {
            x: "culmen_length_mm", // Axe X : longueur du bec
            y: "culmen_depth_mm", // Axe Y : profondeur du bec
            stroke: "species", // Couleur selon l'espèce
            title: (d) => `${d.species} • ${d.island} • ${d.sex ?? "?"}`,
            filter: (d) =>
              (species === "" || d.species === species) &&
              (island === "" || d.island === island) &&
              (sex === "" || d.sex === sex),
          }),
        ],
        x: { label: "Culmen length (mm)" },
        y: { label: "Culmen depth (mm)" },
      });

      // Ajoute le graphique à la div
      container.appendChild(plot);
    }

    // Ajoute un écouteur d'événement pour le changement d'espèce (appel 'renderPlot')
    selectSpecies?.addEventListener("change", renderPlot);

    // Affiche le graphique au chargement de la page
    renderPlot();
  </script>
</Layout>
